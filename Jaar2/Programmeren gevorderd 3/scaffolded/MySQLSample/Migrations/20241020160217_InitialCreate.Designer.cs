// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Northwind;

#nullable disable

namespace MySQLSample.Migrations
{
    [DbContext(typeof(NorthwindContext))]
    [Migration("20241020160217_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CustCustDemographic", b =>
                {
                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("custId");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("customerTypeId");

                    b.HasKey("CustId", "CustomerTypeId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "CustomerTypeId" }, "customerTypeId");

                    b.ToTable("CustCustDemographics", (string)null);
                });

            modelBuilder.Entity("CustomerCustomerDemographic", b =>
                {
                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.HasKey("CustId", "CustomerTypeId");

                    b.ToTable("CustomerCustomerDemographic");
                });

            modelBuilder.Entity("EmployeeTerritory", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<string>("TerritoryId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("territoryId");

                    b.HasKey("EmployeeId", "TerritoryId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "TerritoryId" }, "territoryId");

                    b.ToTable("EmployeeTerritory", (string)null);
                });

            modelBuilder.Entity("Northwind.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("categoryName");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("blob")
                        .HasColumnName("picture");

                    b.HasKey("CategoryId")
                        .HasName("PRIMARY");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Northwind.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("custId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CustId"));

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("city");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("companyName");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contactTitle");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasMaxLength(225)
                        .HasColumnType("varchar(225)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("fax");

                    b.Property<string>("Mobile")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("mobile");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("phone");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postalCode");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("region");

                    b.HasKey("CustId")
                        .HasName("PRIMARY");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Northwind.CustomerDemographic", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerTypeId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CustomerTypeId"));

                    b.Property<string>("CustomerDesc")
                        .HasColumnType("text")
                        .HasColumnName("customerDesc");

                    b.HasKey("CustomerTypeId")
                        .HasName("PRIMARY");

                    b.ToTable("CustomerDemographics");
                });

            modelBuilder.Entity("Northwind.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("birthDate");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasMaxLength(225)
                        .HasColumnType("varchar(225)")
                        .HasColumnName("email");

                    b.Property<string>("Extension")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("extension");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("firstname");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("hireDate");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lastname");

                    b.Property<int?>("MgrId")
                        .HasColumnType("int")
                        .HasColumnName("mgrId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("mobile");

                    b.Property<byte[]>("Notes")
                        .HasColumnType("blob")
                        .HasColumnName("notes");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("phone");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("blob")
                        .HasColumnName("photo");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photoPath");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postalCode");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("region");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("title");

                    b.Property<string>("TitleOfCourtesy")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("titleOfCourtesy");

                    b.HasKey("EmployeeId")
                        .HasName("PRIMARY");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Northwind.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderDetailId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<decimal>("Discount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("discount");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint")
                        .HasColumnName("quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("unitPrice");

                    b.HasKey("OrderDetailId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "orderId");

                    b.HasIndex(new[] { "ProductId" }, "productId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Northwind.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Discontinued")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("discontinued")
                        .IsFixedLength();

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("productName");

                    b.Property<string>("QuantityPerUnit")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("quantityPerUnit");

                    b.Property<short?>("ReorderLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("reorderLevel");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("unitPrice");

                    b.Property<short?>("UnitsInStock")
                        .HasColumnType("smallint")
                        .HasColumnName("unitsInStock");

                    b.Property<short?>("UnitsOnOrder")
                        .HasColumnType("smallint")
                        .HasColumnName("unitsOnOrder");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "categoryId");

                    b.HasIndex(new[] { "SupplierId" }, "supplierId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Northwind.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("regionId");

                    b.Property<string>("Regiondescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("regiondescription");

                    b.HasKey("RegionId")
                        .HasName("PRIMARY");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("Northwind.SalesOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("custId");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<decimal?>("Freight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("freight");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime")
                        .HasColumnName("requiredDate");

                    b.Property<string>("ShipAddress")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("shipAddress");

                    b.Property<string>("ShipCity")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("shipCity");

                    b.Property<string>("ShipCountry")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("shipCountry");

                    b.Property<string>("ShipName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("shipName");

                    b.Property<string>("ShipPostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("shipPostalCode");

                    b.Property<string>("ShipRegion")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("shipRegion");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("shippedDate");

                    b.Property<int>("Shipperid")
                        .HasColumnType("int")
                        .HasColumnName("shipperid");

                    b.HasKey("OrderId", "CustId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "CustId" }, "custId");

                    b.HasIndex(new[] { "Shipperid" }, "shipperid");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("Northwind.Shipper", b =>
                {
                    b.Property<int>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipperId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ShipperId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("companyName");

                    b.Property<string>("Phone")
                        .HasMaxLength(44)
                        .HasColumnType("varchar(44)")
                        .HasColumnName("phone");

                    b.HasKey("ShipperId")
                        .HasName("PRIMARY");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("Northwind.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("city");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("companyName");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contactTitle");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasMaxLength(225)
                        .HasColumnType("varchar(225)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("fax");

                    b.Property<string>("HomePage")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("phone");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postalCode");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("region");

                    b.HasKey("SupplierId")
                        .HasName("PRIMARY");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Northwind.Territory", b =>
                {
                    b.Property<string>("TerritoryId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("territoryId");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("regionId");

                    b.Property<string>("Territorydescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("territorydescription");

                    b.HasKey("TerritoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RegionId" }, "regionId");

                    b.ToTable("Territory");
                });

            modelBuilder.Entity("CustCustDemographic", b =>
                {
                    b.HasOne("Northwind.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustId")
                        .IsRequired()
                        .HasConstraintName("CustCustDemographics_ibfk_1");

                    b.HasOne("Northwind.CustomerDemographic", null)
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .IsRequired()
                        .HasConstraintName("CustCustDemographics_ibfk_2");
                });

            modelBuilder.Entity("EmployeeTerritory", b =>
                {
                    b.HasOne("Northwind.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("EmployeeTerritory_ibfk_1");

                    b.HasOne("Northwind.Territory", null)
                        .WithMany()
                        .HasForeignKey("TerritoryId")
                        .IsRequired()
                        .HasConstraintName("EmployeeTerritory_ibfk_2");
                });

            modelBuilder.Entity("Northwind.OrderDetail", b =>
                {
                    b.HasOne("Northwind.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("OrderDetail_ibfk_2");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Northwind.Product", b =>
                {
                    b.HasOne("Northwind.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("Product_ibfk_2");

                    b.HasOne("Northwind.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("Product_ibfk_1");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Northwind.SalesOrder", b =>
                {
                    b.HasOne("Northwind.Customer", "Cust")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CustId")
                        .IsRequired()
                        .HasConstraintName("SalesOrder_ibfk_2");

                    b.HasOne("Northwind.Shipper", "Shipper")
                        .WithMany("SalesOrders")
                        .HasForeignKey("Shipperid")
                        .IsRequired()
                        .HasConstraintName("SalesOrder_ibfk_1");

                    b.Navigation("Cust");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("Northwind.Territory", b =>
                {
                    b.HasOne("Northwind.Region", "Region")
                        .WithMany("Territories")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("Territory_ibfk_1");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Northwind.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Northwind.Customer", b =>
                {
                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("Northwind.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Northwind.Region", b =>
                {
                    b.Navigation("Territories");
                });

            modelBuilder.Entity("Northwind.Shipper", b =>
                {
                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("Northwind.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
